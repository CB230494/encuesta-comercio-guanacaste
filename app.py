# === PARTE 1: IMPORTACIONES Y CONFIGURACI√ìN GOOGLE SHEETS ===

import streamlit as st
import pandas as pd
from datetime import datetime
import folium
from streamlit_folium import st_folium
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import time

# CSS personalizado
st.markdown(
    """
    <style>
    /* Fondo general */
    .stApp {
        background-color: #0e1117;
    }

    /* T√≠tulos principales */
    h1, h2, h3 {
        color: #3399ff;
    }

    /* Estilo de Expander Headers */
    .streamlit-expanderHeader {
        font-weight: bold;
        background-color: #003366;
        color: white;
        border-radius: 10px;
        padding: 10px;
        margin-bottom: 5px;
        font-size: 20px;
    }

    /* Fondo interno de expanders */
    div[data-testid="stExpander"] > div {
        background-color: #1f2228;
        border: 2px solid #ff4b4b;
        border-radius: 12px;
        padding: 10px;
    }

    /* Inputs personalizados (radios, selects, multiselects) */
    .stSelectbox > div, .stRadio > div, .stMultiSelect > div, .stTextArea > div {
        background-color: #1f2228;
        border-radius: 10px;
        color: white;
        padding: 10px;
    }

    /* Botones */
    .stButton > button {
        background-color: #ff4b4b;
        color: white;
        border: none;
        border-radius: 10px;
        padding: 10px 24px;
        font-size: 16px;
    }
    .stButton > button:hover {
        background-color: #e60000;
        color: white;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# Mostrar logo local


st.markdown(
    """
    <div style="text-align: center; margin-bottom: 10px;">
        <!-- Aqu√≠ despu√©s pones tu st.image('ruta_logo.png') -->
        <h1 style="color: #3399ff;">Encuesta Comercio 2025 ü¶úüå¥</h1>
    </div>
    """,
    unsafe_allow_html=True
) 



# === TEXTO INICIAL ===
st.title("Encuesta Comercio - Santa Cruz")

st.markdown("""
**Con el objetivo de fortalecer la seguridad en nuestro entorno comercial, nos enfocamos en abordar las principales preocupaciones de seguridad.**
La informaci√≥n que nos suministras es completamente confidencial y se emplea exclusivamente con el prop√≥sito de mejorar la seguridad en nuestra √°rea comercial.
""")

# === PARTE 2: DATOS DEMOGR√ÅFICOS Y MAPA ===

if st.session_state.enviado:
    st.success("‚úÖ ¬°Formulario enviado exitosamente!")
    if st.button("Enviar otro formulario"):
        st.session_state.enviado = False
        st.experimental_rerun()
else:
    with st.expander("1Ô∏è‚É£ü¶ú Datos Demogr√°ficos", expanded=True):
        canton = "Santa Cruz"
        distrito = st.selectbox("Distrito:", ["", "Tamarindo", "Cartagena", "Cabo Velas (Flamingo)"])
        edad = st.number_input("Edad:", min_value=12, max_value=120, format="%d")
        sexo = st.radio("Sexo:", ["Hombre", "Mujer", "LGBTQ+", "Otro / Prefiero No decirlo"])
        escolaridad = st.radio("Escolaridad:", [
            "Ninguna", "Primaria", "Primaria incompleta", "Secundaria incompleta",
            "Secundaria completa", "Universitaria incompleta", "Universitaria", "T√©cnico"
        ])
        tipo_local = st.radio("Tipo de local comercial:", [
            "Supermercado", "Pulper√≠a / Licorera", "Restaurante / Soda", "Bar", 
            "Tienda de art√≠culos", "Gasolineras", "Servicios est√©ticos", "Puesto de loter√≠a", "Otro"
        ])
        st.caption("Nota: Todas las anteriores son selecci√≥n √∫nica.")

       # === PARTE DEL MAPA EN "DATOS DEMOGR√ÅFICOS" ===

st.markdown("### Seleccione su ubicaci√≥n en el mapa:")

# Crear el mapa base solo una vez al cargar
if "mapa" not in st.session_state:
    st.session_state.mapa = folium.Map(location=[10.3, -85.8], zoom_start=13)

# Si ya hay ubicaci√≥n seleccionada, agregar el marcador
if st.session_state.ubicacion:
    # Limpiar y recrear el mapa para evitar m√∫ltiples marcadores
    st.session_state.mapa = folium.Map(location=[10.3, -85.8], zoom_start=13)
    folium.Marker(
        location=st.session_state.ubicacion,
        tooltip="Ubicaci√≥n seleccionada",
        icon=folium.Icon(color="blue", icon="map-marker")
    ).add_to(st.session_state.mapa)

# Mostrar el mapa (sin recargar toda la p√°gina)
map_click = st_folium(st.session_state.mapa, width=700, height=500)

# Si el usuario hace clic en el mapa, capturar nueva ubicaci√≥n
if map_click and map_click.get("last_clicked"):
    lat = map_click["last_clicked"]["lat"]
    lon = map_click["last_clicked"]["lng"]
    st.session_state.ubicacion = [lat, lon]

# === PARTE 3: PERCEPCI√ìN DE SEGURIDAD ===
with st.expander("2Ô∏è‚É£üêí Percepci√≥n de Seguridad"):
    percepcion_seguridad = st.radio(
        "¬øQu√© tan seguro(a) se siente en esta zona comercial?",
        ["Muy seguro(a)", "Seguro(a)", "Ni seguro(a) Ni inseguro(a)", "Inseguro(a)", "Muy inseguro(a)"]
    )
    st.caption("Nota: respuesta de selecci√≥n √∫nica.")

    factores_inseguridad = []
    if percepcion_seguridad in ["Inseguro(a)", "Muy inseguro(a)"]:
        factores_inseguridad = st.multiselect(
            "¬øPor qu√© se siente inseguro(a)?",
            [
                "Presencia de personas desconocidas o comportamientos inusuales",
                "Poca iluminaci√≥n en la zona",
                "Escasa presencia policial",
                "Robos frecuentes",
                "Consumo de sustancias en la v√≠a p√∫blica",
                "Horarios considerados peligrosos (Entre las 6:00pm y las 5:00am)",
                "Disturbios o ri√±as cercanas",
                "Otro"
            ]
        )
        st.caption("Nota: selecci√≥n m√∫ltiple.")


# === PARTE 4: FACTORES DE RIESGO SOCIAL ===
with st.expander("3Ô∏è‚É£üê¢ Factores de Riesgo Social"):
    factores_sociales = st.multiselect(
        "¬øCu√°les de los siguientes factores afectan la seguridad en su zona comercial?",
        [
            "Falta de oportunidades laborales", 
            "Problemas vecinales", 
            "Asentamientos ilegales",
            "Personas en situaci√≥n de calle", 
            "Zona de prostituci√≥n", 
            "Consumo de alcohol en v√≠a p√∫blica",
            "Personas con exceso de tiempo de ocio", 
            "Cuarter√≠as", 
            "Lotes bald√≠os",
            "Ventas informales", 
            "P√©rdida de espacios p√∫blicos", 
            "Otro"
        ]
    )
    st.caption("Nota: selecci√≥n m√∫ltiple.")
# === PARTE 5: SITUACIONES RELACIONADAS A DELITOS ===
with st.expander("4Ô∏è‚É£ü¶• Situaciones Relacionadas a Delitos"):
    delitos_zona = st.multiselect(
        "¬øQu√© delitos considera que ocurren alrededor de su comercio?",
        [
            "Disturbios en v√≠a p√∫blica",
            "Da√±os a la propiedad",
            "Intimidaci√≥n o amenazas con fines de lucro",
            "Hurto",
            "Receptaci√≥n",
            "Contrabando",
            "Otro"
        ]
    )
    st.caption("Nota: selecci√≥n m√∫ltiple.")

    venta_drogas = st.multiselect(
        "¬øD√≥nde ocurre la venta de drogas?",
        [
            "B√∫nker (espacio cerrado)",
            "V√≠a p√∫blica",
            "Expr√©s"
        ]
    )

    delitos_vida = st.multiselect(
        "¬øQu√© delitos contra la vida ha observado?",
        [
            "Homicidios",
            "Heridos"
        ]
    )

    delitos_sexuales = st.multiselect(
        "¬øQu√© delitos sexuales ha percibido?",
        [
            "Abuso sexual",
            "Acoso sexual",
            "Violaci√≥n"
        ]
    )

    asaltos = st.multiselect(
        "¬øQu√© tipos de asaltos considera que ocurren?",
        [
            "Asalto a personas",
            "Asalto a comercio",
            "Asalto a vivienda",
            "Asalto a transporte p√∫blico"
        ]
    )

    estafas = st.multiselect(
        "¬øQu√© tipos de estafas ha observado?",
        [
            "Billetes falsos",
            "Documentos falsos",
            "Estafa (Oro)",
            "Loter√≠a falsos",
            "Estafas inform√°ticas",
            "Estafa telef√≥nica",
            "Estafa con tarjetas"
        ]
    )

    robos = st.multiselect(
        "¬øQu√© tipos de robos ha identificado?",
        [
            "Tacha a comercio",
            "Tacha a edificaciones",
            "Tacha a vivienda",
            "Tacha de veh√≠culos",
            "Robo de veh√≠culos"
        ]
    )
    st.caption("Nota: selecci√≥n m√∫ltiple.")
# === PARTE 6: INFORMACI√ìN ADICIONAL ===
# === PARTE 6: INFORMACI√ìN ADICIONAL ===
# === PARTE 6: INFORMACI√ìN ADICIONAL ===
with st.expander("5Ô∏è‚É£ü¶é Informaci√≥n Adicional"):
    st.markdown("""
    **Informaci√≥n adicional**

    Este apartado busca conocer con mayor profundidad la percepci√≥n de seguridad en el entorno comercial, identificar situaciones particulares que generan preocupaci√≥n entre los comerciantes y entender mejor los factores que afectan el desarrollo de su actividad. La informaci√≥n recolectada permitir√° orientar acciones preventivas, fortalecer la presencia institucional y fomentar entornos comerciales m√°s seguros y colaborativos.
    """)

    observacion_control = st.radio(
        "¬øHa notado la presencia de personas o grupos que aparentan ejercer control sobre la actividad comercial?",
        [
            "S√≠, he observado comportamientos similares",
            "He escuchado comentarios de otros comercios",
            "No",
            "Prefiero no responder"
        ]
    )

    descripcion_control = []
    if observacion_control == "S√≠, he observado comportamientos similares":
        descripcion_control = st.multiselect(
            "Describa qu√© tipo de comportamientos ha observado:",
            [
                "Cobros o 'cuotas' por dejar operar",
                "Personas que vigilan entradas/salidas",
                "Amenazas veladas o directas",
                "Restricciones sobre horarios o actividades",
                "Intermediarios de 'seguridad' no oficiales",
                "Personas ajenas con control territorial",
                "Interferencia constante en operaci√≥n",
                "Presencia de grupos como 'autorizadores'",
                "Otros"
            ]
        )
        st.caption("Nota: selecci√≥n m√∫ltiple.")

    victima = st.radio(
        "¬øUsted o su local comercial han sido v√≠ctimas de alg√∫n delito en los √∫ltimos 12 meses?",
        [
            "S√≠, y present√© la denuncia",
            "S√≠, pero no present√© la denuncia",
            "No",
            "Prefiero no responder"
        ]
    )

    motivo_no_denuncia = []
    tipo_delito = []
    horario_delito = ""
    modo_operar = []

    if victima == "S√≠, pero no present√© la denuncia":
        motivo_no_denuncia = st.multiselect(
            "¬øPor qu√© no present√≥ la denuncia?",
            [
                "Distancia (falta de oficinas para recepci√≥n de denuncias)",
                "Miedo a represalias",
                "Falta de respuesta oportuna",
                "He realizado denuncias y no ha pasado nada",
                "Complejidad al colocar la denuncia",
                "Desconocimiento de d√≥nde colocar la denuncia",
                "El Polic√≠a me dijo que era mejor no denunciar",
                "Falta de tiempo para colocar la denuncia"
            ]
        )
        st.caption("Nota: selecci√≥n m√∫ltiple.")
    elif victima == "S√≠, y present√© la denuncia":
        tipo_delito = st.multiselect(
            "¬øCu√°l fue el delito del que fue v√≠ctima?",
            [
                "Hurto", "Asalto", "Cobro por protecci√≥n", "Estafa",
                "Da√±os a la propiedad", "Venta o consumo de drogas",
                "Amenazas", "Cobros peri√≥dicos o 'cuotas'", "Otro"
            ]
        )
        st.caption("Nota: puede marcar m√°s de una opci√≥n.")

    # SOLO si fue v√≠ctima mostrar horario y modo de operar
    if victima in ["S√≠, y present√© la denuncia", "S√≠, pero no present√© la denuncia"]:
        horario_delito = st.selectbox(
            "¬øConoce el horario en el que ocurri√≥ el hecho delictivo?",
            [
                "", 
                "00:00 - 02:59 a.m.", "03:00 - 05:59 a.m.", "06:00 - 08:59 a.m.",
                "09:00 - 11:59 a.m.", "12:00 - 14:59 p.m.", "15:00 - 17:59 p.m.",
                "18:00 - 20:59 p.m.", "21:00 - 23:59 p.m.", "Desconocido"
            ]
        )

        modo_operar = st.multiselect(
            "¬øC√≥mo operaban los responsables?",
            [
                "Arma blanca", "Arma de fuego", "Amenazas",
                "Cobros o 'cuotas' por dejar operar", "Arrebato",
                "Boquete", "Ganz√∫a", "Enga√±o", "No s√©", "Otro"
            ]
        )
        st.caption("Nota: selecci√≥n m√∫ltiple.")

    # Continua normal para todos
    exigencia_cuota = st.radio(
        "¬øHa recibido su local comercial alg√∫n tipo de exigencia econ√≥mica o cuota obligatoria?",
        ["S√≠", "No", "Prefiero no responder"]
    )

    descripcion_cuota = ""
    if exigencia_cuota == "S√≠":
        descripcion_cuota = st.text_area(
            "Detalle c√≥mo ocurri√≥ (frecuencia, forma de contacto, tipo de exigencia):"
        )

    opinion_fp = st.radio(
        "¬øC√≥mo califica el servicio policial de la Fuerza P√∫blica cerca de su local?",
        ["Excelente", "Bueno", "Regular", "Mala", "Muy mala"]
    )

    cambio_servicio = st.radio(
        "¬øC√≥mo ha cambiado el servicio en los √∫ltimos 12 meses?",
        ["Ha mejorado mucho", "Ha mejorado", "Igual", "Ha empeorado", "Ha empeorado mucho"]
    )

    conocimiento_policias = st.radio(
        "¬øConoce a los polic√≠as de Fuerza P√∫blica o Polic√≠a Tur√≠stica que patrullan su zona comercial?",
        ["S√≠", "No"]
    )

    participacion_programa = st.radio(
        "¬øConoce o participa en el Programa de Seguridad Comercial impulsado por Fuerza P√∫blica?",
        [
            "No lo conozco",
            "Lo conozco, pero no participo",
            "Lo conozco y participo activamente",
            "No lo conozco, pero me gustar√≠a participar",
            "Prefiero no responder"
        ]
    )

    deseo_participar = ""
    if participacion_programa in [
        "No lo conozco", "Lo conozco, pero no participo", "No lo conozco, pero me gustar√≠a participar"
    ]:
        deseo_participar = st.text_area(
            "Si desea ser contactado para formar parte del programa, indique nombre del comercio, correo electr√≥nico y n√∫mero de tel√©fono:"
        )

    medidas_fp = st.text_area(
        "¬øQu√© medidas considera importantes que implemente la Fuerza P√∫blica para mejorar la seguridad en su zona comercial?"
    )

    medidas_muni = st.text_area(
        "¬øQu√© medidas considera necesarias por parte de la Municipalidad para mejorar la seguridad en su zona comercial?"
    )

    info_adicional = st.text_area(
        "¬øDesea agregar alguna otra informaci√≥n que considere pertinente?"
    )


# === PARTE 7: ENV√çO Y GUARDADO DE RESPUESTAS ===
if not st.session_state.enviado:
    if st.button("Enviar formulario"):
        errores = []

        # Validaciones b√°sicas
        if not st.session_state.ubicacion:
            errores.append("Ubicaci√≥n en el mapa")
        if not distrito:
            errores.append("Distrito")
        if not sexo:
            errores.append("Sexo")
        if not escolaridad:
            errores.append("Escolaridad")
        if not tipo_local:
            errores.append("Tipo de local comercial")
        if not percepcion_seguridad:
            errores.append("Percepci√≥n de seguridad")
        if not victima:
            errores.append("Victimizaci√≥n")
        if not horario_delito:
            errores.append("Horario del hecho")
        if not exigencia_cuota:
            errores.append("Exigencia de cuota")
        if not opinion_fp:
            errores.append("Opini√≥n sobre Fuerza P√∫blica")
        if not cambio_servicio:
            errores.append("Cambio de servicio policial")
        if not conocimiento_policias:
            errores.append("Conocimiento de polic√≠as")
        if not participacion_programa:
            errores.append("Participaci√≥n en programa")

        if errores:
            st.error("‚ö†Ô∏è Faltan los siguientes campos obligatorios: " + ", ".join(errores))
        else:
            lat, lon = st.session_state.ubicacion
            ubicacion_url = f"https://www.google.com/maps?q={lat},{lon}"

            # Preparar fila de datos
            datos = [
                datetime.now().isoformat(),
                canton,
                distrito,
                edad,
                sexo,
                escolaridad,
                tipo_local,
                ubicacion_url,
                percepcion_seguridad,
                ", ".join(factores_inseguridad) if factores_inseguridad else "",
                ", ".join(factores_sociales) if factores_sociales else "",
                "",  # Inversi√≥n social (lo puedes agregar si quieres aqu√≠ en estructura)
                "",  # Consumo de drogas
                "",  # B√∫nkers
                ", ".join(delitos_zona) if delitos_zona else "",
                ", ".join(venta_drogas) if venta_drogas else "",
                ", ".join(delitos_vida) if delitos_vida else "",
                ", ".join(delitos_sexuales) if delitos_sexuales else "",
                ", ".join(asaltos) if asaltos else "",
                ", ".join(estafas) if estafas else "",
                ", ".join(robos) if robos else "",
                observacion_control,
                ", ".join(descripcion_control) if descripcion_control else "",
                victima,
                ", ".join(motivo_no_denuncia) if motivo_no_denuncia else "",
                ", ".join(tipo_delito) if tipo_delito else "",
                horario_delito,
                ", ".join(modo_operar) if modo_operar else "",
                exigencia_cuota,
                descripcion_cuota,
                opinion_fp,
                cambio_servicio,
                conocimiento_policias,
                participacion_programa,
                deseo_participar,
                medidas_fp,
                medidas_muni,
                info_adicional
            ]

            # Guardar en Google Sheets
            sheet = conectar_google_sheets()
            if sheet:
                try:
                    sheet.append_row(datos)
                    st.session_state.enviado = True
                    st.success("‚úÖ ¬°Formulario enviado correctamente!")
                    st.experimental_rerun()
                except Exception:
                    st.error("‚ùå Error al guardar la respuesta. Intente de nuevo.")
else:
    st.success("‚úÖ ¬°Formulario enviado correctamente!")
    if st.button("Enviar otro formulario"):
        st.session_state.enviado = False
        st.experimental_rerun()


